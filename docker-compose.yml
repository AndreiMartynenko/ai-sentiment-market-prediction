version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sentiment_postgres
    environment:
      POSTGRES_DB: sentiment_prediction
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - sentiment_network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: sentiment_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sentiment_network

  # Go Backend API
  go-api:
    build:
      context: .
      dockerfile: docker/Dockerfile.go
    container_name: sentiment_go_api
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=sentiment_prediction
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ML_SERVICE_URL=http://ml-service:8000
    depends_on:
      - postgres
      - redis
      - ml-service
    networks:
      - sentiment_network
    volumes:
      - ./logs:/app/logs

  # Python ML Service
  ml-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.python
    container_name: sentiment_ml_service
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app/src
      - MODEL_PATH=/app/models
    volumes:
      - ./models:/app/models
      - ./src:/app/src
      - ./data:/app/data
    networks:
      - sentiment_network

  # Data Collection Service
  data-collector:
    build:
      context: .
      dockerfile: docker/Dockerfile.python
    container_name: sentiment_data_collector
    environment:
      - PYTHONPATH=/app/src
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=sentiment_prediction
      - NEWS_API_KEY=${NEWS_API_KEY}
      - TWITTER_API_KEY=${TWITTER_API_KEY}
    depends_on:
      - postgres
    networks:
      - sentiment_network
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    command: python src/enhanced_data_pipeline.py

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sentiment_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - go-api
      - ml-service
    networks:
      - sentiment_network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: sentiment_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - sentiment_network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: sentiment_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - sentiment_network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  sentiment_network:
    driver: bridge
