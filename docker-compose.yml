version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sentiment_postgres
    environment:
      POSTGRES_DB: sentiment_market
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed_data.sql:/docker-entrypoint-initdb.d/02-seed_data.sql
    networks:
      - sentiment_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go API Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: sentiment_api
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/sentiment_market?sslmode=disable
      - ML_SERVICE_URL=http://ml-service:8000
      - PORT=8080
      - NEWS_API_KEY=${NEWS_API_KEY}
      - BINANCE_API_KEY=${BINANCE_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      ml-service:
        condition: service_started
    networks:
      - sentiment_network
    volumes:
      - ./logs:/app/logs

  # Python ML Service (FastAPI)
  ml-service:
    build:
      context: .
      dockerfile: Dockerfile.ml
    container_name: sentiment_ml_service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/sentiment_market?sslmode=disable
      - PYTHONPATH=/app
      - NEWS_API_KEY=${NEWS_API_KEY}
      - BINANCE_API_KEY=${BINANCE_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sentiment_network
    volumes:
      - ./ml_service:/app/ml_service
      - ./models:/app/models
      - ./logs:/app/logs

  # Streamlit Dashboard
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: sentiment_dashboard
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://api:8080
      - ML_SERVICE_URL=http://ml-service:8000
    depends_on:
      - api
      - ml-service
    networks:
      - sentiment_network
    volumes:
      - ./dashboard:/app/dashboard

networks:
  sentiment_network:
    driver: bridge

volumes:
  postgres_data:
